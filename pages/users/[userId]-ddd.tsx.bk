import * as React from "react";
import { useRouter } from "next/router";

export interface IUserInfoProps {}

export default async function UserInfo(props: IUserInfoProps) {
  const router = useRouter();
  const userId = router.query?.userId;

  return (
    <div>
      <h1>This is user info {userId}</h1>
    </div>
  );
}

// export const getStaticPaths: GetStaticPaths = async () => {
//   console.log("Get Statics Path");

//   // const postId = router.query;
//   const response = await fetch(`https://jsonplaceholder.typicode.com/users`);
//   const data = await response.json();

//   console.log(data);

//   return {
//     paths: data.map((user: any) => ({ params: { userId: user?.id.toString() } })),
//     fallback: false,
//   };
//   // return {
//   //   paths: [],
//   //   fallback: false,
//   // };
// };

// export const getStaticProps: GetStaticProps<IUserInfoProps> = async (
//   context: GetStaticPropsContext
// ) => {
//   console.log("Get Static props Post Detail from server", context.params?.userId);
//   const userId = context.params?.userId;

//   if (!userId) return { notFound: true };

//   const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);
//   const data = await response.json();

//   return {
//     props: {
//       data,
//     },
//   };
// };
